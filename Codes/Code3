import logging
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# Настройка логирования
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# Файл для хранения истории переписки
CHAT_LOG_FILE = 'chat_history.txt'


# Функция для записи сообщений в файл
def log_message(user_id, username, message):
    with open(CHAT_LOG_FILE, 'a', encoding='utf-8') as f:
        log_entry = f"{datetime.now()} - User ID: {user_id} - {username}: {message}\n"
        f.write(log_entry)


# Обработчик текстовых сообщений
async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username or "Unnamed"
    message = update.message.text

    log_message(user_id, username, message)
    await update.message.reply_text("Ваше сообщение записано!")


# Команда для генерации отчета
async def report_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text("Пожалуйста, введите дату в формате ГГГГ-ММ-ДД.")
        return

    date_str = context.args[0]

    try:
        date = datetime.strptime(date_str, "%Y-%m-%d").date()
    except ValueError:
        await update.message.reply_text("Неверный формат даты. Пожалуйста, используйте ГГГГ-ММ-ДД.")
        return

    report = ""
    with open(CHAT_LOG_FILE, 'r', encoding='utf-8') as f:
        for line in f:
            if date.strftime("%Y-%m-%d") in line:
                report += line

    if report:
        await update.message.reply_text(f"Отчет за {date_str}:\n{report.strip()}")
    else:
        await update.message.reply_text(f"Нет сообщений за {date_str}.")


# Основная функция для настройки и запуска бота
def main():
    # Создайте объект приложения
    application = Application.builder().token("7898062819:AAGl5eNzuOpX6tT3yyX7-eo_rmBJ6zHFyyU").build()

    # Обработчики команд
    application.add_handler(CommandHandler("report", report_command))
    application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), text_handler))

    # Запуск бота
    application.run_polling()


if __name__ == "__main__":
    main()
